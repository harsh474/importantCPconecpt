#include <bits/stdc++.h>
#define lli long long int
using namespace std;
// DataTypes
using str = string;
using ll = long long;
using ld = long double;

#define FL(i, a, b) for (ll i = (ll)a; i < (ll)b; ++i)
#define fl(i, n) FL(i, 0, n)
#define rfl(i, n) for (ll i = (ll)(n)-1; i >= 0; i--)
#define all(x) x.begin(), x.end()
#define pub push_back
#define pob pop_back
#define mp make_pair
#define ff first
#define ss second
#define bb begin()
#define ee end()

lli n, m, k, x, y, maxx, minn;
string s;

vector<lli> vi;
vector<string> vs;

int solve(vector<int> &v, vector<int> ans, int n, int index, int sum)
{
  if (index >= n)
  {
    if (sum == 10)
    {
      for (int i = 0; i < ans.size(); i++)
      {
        cout << ans[i] << " ";
      }
      cout << endl; 
  return 1 ;
    }
    return 0; 
  }
  ans.push_back(v[index]);
int l=  solve(v, ans, n, index + 1, sum + v[index]);
  ans.pop_back();
int h=  solve(v, ans, n, index + 1, sum ); 
return l+h ;
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  lli t = 1;
  // cin>>t;
  while (t--)
  {
    vector<int> v = {1, 5, 5, 9,10};
    vector<int> ans;

  cout<<  solve(v, ans, 5, 0, 0);
  }
  vi.clear();
  return 0;
} 
--------------------------------------or-----------------------------
#include <bits/stdc++.h>
#define lli long long int
using namespace std;
// DataTypes
using str = string;
using ll = long long;
using ld = long double;

#define FL(i, a, b) for (ll i = (ll)a; i < (ll)b; ++i)
#define fl(i, n) FL(i, 0, n)
#define rfl(i, n) for (ll i = (ll)(n)-1; i >= 0; i--)
#define all(x) x.begin(), x.end()
#define pub push_back
#define pob pop_back
#define mp make_pair
#define ff first
#define ss second
#define bb begin()
#define ee end()

lli n, m, k, x, y, maxx, minn;
string s;

vector<lli> vi;
vector<string> vs;

void solve(vector<int> &v, vector<int> ans, int n, int index, int sum,int &temp)
{
  if (index >= n)
  {
    if (sum == 10)
    {
      for (int i = 0; i < ans.size(); i++)
      {
        cout << ans[i] << " ";
      }
      cout << endl; 
      temp++;

    }
    return ;
  }
  ans.push_back(v[index]);
 solve(v, ans, n, index + 1, sum + v[index],temp);
  ans.pop_back();
 solve(v, ans, n, index + 1, sum ,temp); 
return ;
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  lli t = 1;
  // cin>>t;
  while (t--)
  {
    vector<int> v = {1, 5, 5, 9,10};
    vector<int> ans;  
    int temp = 0 ;

  solve(v, ans, 5, 0, 0,temp) ;
  cout<<  temp<<endl;
  }
  vi.clear();
  return 0;
}
